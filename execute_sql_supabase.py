#!/usr/bin/env python3
"""
–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL —Å–∫—Ä–∏–ø—Ç–∞ –≤ Supabase —á–µ—Ä–µ–∑ REST API
"""

import urllib.request
import urllib.parse
import json
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase
SUPABASE_URL = "https://auhzhdndqyflfdfszapm.supabase.co"
SERVICE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF1aHpoZG5kcXlmbGZkZnN6YXBtIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NzQ0ODcxNywiZXhwIjoyMDczMDI0NzE3fQ.xIJO7zl1hD4IN08oUV5vUWIAP71PEdn2yu_qfF7seQk"

def execute_sql(sql_query):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç SQL –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ Supabase REST API"""
    
    headers = {
        "apikey": SERVICE_KEY,
        "Authorization": f"Bearer {SERVICE_KEY}",
        "Content-Type": "application/json"
    }
    
    # Supabase –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ SQL —á–µ—Ä–µ–∑ REST API
    # –ü–æ—ç—Ç–æ–º—É –º—ã –º–æ–∂–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
    print("‚ö†Ô∏è  Supabase REST API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ SQL")
    print("üìã –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å SQL –≤—Ä—É—á–Ω—É—é –≤ Dashboard")
    
    return False

def check_table_exists(table_name):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã"""
    
    headers = {
        "apikey": SERVICE_KEY,
        "Authorization": f"Bearer {SERVICE_KEY}",
        "Content-Type": "application/json"
    }
    
    try:
        req = urllib.request.Request(f"{SUPABASE_URL}/rest/v1/{table_name}?select=id&limit=1", headers=headers)
        
        with urllib.request.urlopen(req) as response:
            if response.status == 200:
                return True
            else:
                return False
                
    except Exception as e:
        return False

def main():
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Supabase")
    print("=" * 40)
    
    # –ß–∏—Ç–∞–µ–º SQL —Å–∫—Ä–∏–ø—Ç
    try:
        with open("supabase_quick_setup.sql", "r", encoding="utf-8") as f:
            sql_content = f.read()
        print("‚úÖ SQL —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ—á–∏—Ç–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è SQL —Å–∫—Ä–∏–ø—Ç–∞: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    tables_to_check = [
        "profiles",
        "user_settings", 
        "user_api_keys",
        "projects",
        "ai_providers",
        "ai_models",
        "api_usage_log",
        "subscription_limits"
    ]
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã...")
    
    existing_tables = []
    missing_tables = []
    
    for table in tables_to_check:
        if check_table_exists(table):
            existing_tables.append(table)
            print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ {table} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            missing_tables.append(table)
            print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ {table} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    if missing_tables:
        print(f"\n‚ö†Ô∏è  –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã: {', '.join(missing_tables)}")
        print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–ò:")
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤: https://supabase.com/dashboard/project/auhzhdndqyflfdfszapm/sql")
        print("2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ supabase_quick_setup.sql")
        print("3. –í—Å—Ç–∞–≤—å—Ç–µ –≤ SQL Editor –∏ –Ω–∞–∂–º–∏—Ç–µ 'Run'")
        print("4. –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
    else:
        print(f"\n‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã! ({len(existing_tables)}/{len(tables_to_check)})")
        print("üéâ Supabase –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    main()