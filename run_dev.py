#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
"""

import subprocess
import sys
import os
import time
import signal
from pathlib import Path

def run_backend():
    """–ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞...")
    os.chdir("/workspace")
    return subprocess.Popen([
        sys.executable, "-m", "uvicorn", 
        "backend.main:app", 
        "--host", "0.0.0.0", 
        "--port", "8000", 
        "--reload"
    ])

def run_frontend():
    """–ó–∞–ø—É—Å–∫ frontend —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üé® –ó–∞–ø—É—Å–∫ frontend —Å–µ—Ä–≤–µ—Ä–∞...")
    os.chdir("/workspace/frontend")
    return subprocess.Popen([
        "npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "5173"
    ])

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 60)
    print("üöÄ SAMOKODER DEVELOPMENT SERVER")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    # Backend
    try:
        import backend.main
        print("‚úÖ Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ OK")
    except ImportError as e:
        print(f"‚ùå Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {e}")
        return 1
    
    # Frontend
    frontend_dir = Path("/workspace/frontend")
    if not (frontend_dir / "node_modules").exists():
        print("‚ùå Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd frontend && npm install")
        return 1
    print("‚úÖ Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ OK")
    
    print("\nüåê –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤...")
    print("Backend: http://localhost:8000")
    print("Frontend: http://localhost:5173")
    print("API Docs: http://localhost:8000/docs")
    print("\n–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    backend_proc = None
    frontend_proc = None
    
    try:
        backend_proc = run_backend()
        time.sleep(2)  # –î–∞–µ–º –≤—Ä–µ–º—è backend –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
        
        frontend_proc = run_frontend()
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        while True:
            time.sleep(1)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—â–µ —Ä–∞–±–æ—Ç–∞—é—Ç
            if backend_proc.poll() is not None:
                print("‚ùå Backend —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                break
                
            if frontend_proc.poll() is not None:
                print("‚ùå Frontend —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                break
                
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤...")
        
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
        if backend_proc:
            backend_proc.terminate()
            try:
                backend_proc.wait(timeout=5)
            except subprocess.TimeoutExpired:
                backend_proc.kill()
                
        if frontend_proc:
            frontend_proc.terminate()
            try:
                frontend_proc.wait(timeout=5)
            except subprocess.TimeoutExpired:
                frontend_proc.kill()
        
        print("‚úÖ –°–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    
    return 0

if __name__ == "__main__":
    sys.exit(main())