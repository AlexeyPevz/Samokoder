#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –°–∞–º–æ–∫–æ–¥–µ—Ä –±–µ–∑ Supabase
–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
"""

import uvicorn
import os
import sys
from pathlib import Path
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
root_dir = Path(__file__).parent
sys.path.insert(0, str(root_dir))

from config.settings import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=getattr(logging, settings.log_level.upper()),
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def main():
    """–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–µ–∑ Supabase"""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ Samokoder Backend API (–±–µ–∑ Supabase)...")
    print(f"üìç Host: {settings.host}")
    print(f"üîå Port: {settings.port}")
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç –µ—Å–ª–∏ 8000 –∑–∞–Ω—è—Ç
    if settings.port == 8000:
        settings.port = 8001
    print(f"üåç Environment: {settings.environment}")
    print(f"üêõ Debug: {settings.debug}")
    print(f"üìö Docs: http://{settings.host}:{settings.port}/docs")
    print("-" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
    if not os.path.exists(".env"):
        print("‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: —Ñ–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üìã –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª...")
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª
        env_content = """# Supabase Configuration (–∑–∞–≥–ª—É—à–∫–∏)
SUPABASE_URL=https://example.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.example
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.example

# API Encryption
API_ENCRYPTION_KEY=QvXgcQGd8pz8YETjvWhCLnAJ5SHD2A6uQzBn3_5dNaE

# Server Configuration
HOST=0.0.0.0
PORT=8000
DEBUG=true
ENVIRONMENT=development

# CORS
CORS_ORIGINS=["http://localhost:3000", "http://localhost:5173"]

# Redis
REDIS_URL=redis://localhost:6379

# Monitoring
SENTRY_DSN=

# System API Keys (optional fallback)
SYSTEM_OPENROUTER_KEY=
SYSTEM_OPENAI_KEY=
SYSTEM_ANTHROPIC_KEY=
SYSTEM_GROQ_KEY=
"""
        
        with open(".env", "w") as f:
            f.write(env_content)
        print("‚úÖ –ë–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è)
    if not getattr(settings, 'api_encryption_key', None):
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç API_ENCRYPTION_KEY")
        print("üìã –î–æ–±–∞–≤—å—Ç–µ API_ENCRYPTION_KEY –≤ —Ñ–∞–π–ª .env")
        return
    
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É Supabase - —Ä–∞–±–æ—Ç–∞–µ–º –±–µ–∑ –Ω–µ–≥–æ
    print("‚ö†Ô∏è  Supabase –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞ - —Ä–∞–±–æ—Ç–∞–µ–º –≤ —Ä–µ–∂–∏–º–µ –±–µ–∑ –ë–î")
    print("üí° –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Supabase")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    for dir_path in ["exports", "workspaces"]:
        try:
            Path(dir_path).mkdir(parents=True, exist_ok=True)
            print(f"‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {dir_path} –≥–æ—Ç–æ–≤–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {dir_path}: {e}")
            logger.error(f"Directory creation error: {e}")
            return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    try:
        print("\nüöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
        print("üí° –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ –±–µ–∑ Supabase")
        print("üí° API –∫–ª—é—á–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
        print("üí° –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Å–∏–º—É–ª—è—Ü–∏–∏")
        print("-" * 50)
        
        uvicorn.run(
            "backend.main:app",
            host=settings.host,
            port=settings.port,
            reload=settings.debug,
            log_level=settings.log_level.lower(),
            access_log=True
        )
    except KeyboardInterrupt:
        print("\nüëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        logger.error(f"Server startup error: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()