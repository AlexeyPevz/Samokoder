#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
"""

import os
import sys

def test_file_exists(file_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    try:
        return os.path.exists(file_path)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")
        return False

def test_file_content(file_path, required_content):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞"""
    try:
        if not os.path.exists(file_path):
            return False
        
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        for item in required_content:
            if item not in content:
                return False
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {file_path}: {e}")
        return False

def _test_file_existence():
    """–¢–µ—Å—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:")
    
    files_to_check = [
        "backend/auth/dependencies.py",
        "backend/api/auth.py", 
        "backend/validators/secure_input_validator.py",
        "backend/middleware/secure_rate_limiter.py",
        "backend/middleware/secure_error_handler.py",
        "tests/test_security.py",
        "requirements-security.txt"
    ]
    
    tests_passed = 0
    total_tests = len(files_to_check)
    
    for file_path in files_to_check:
        if test_file_exists(file_path):
            print(f"‚úÖ {file_path}")
            tests_passed += 1
        else:
            print(f"‚ùå {file_path}")
    
    return tests_passed, total_tests

def _test_import_functionality():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–º–ø–æ—Ä—Ç–æ–≤:")
    
    tests_passed = 0
    total_tests = 0
    
    # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ auth dependencies
    total_tests += 1
    try:
        from backend.auth.dependencies import validate_jwt_token, secure_password_validation
        print("‚úÖ backend.auth.dependencies")
        tests_passed += 1
    except ImportError as e:
        print(f"‚ùå backend.auth.dependencies: {e}")
    
    # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ secure input validator
    total_tests += 1
    try:
        from backend.validators.secure_input_validator import SecureInputValidator
        print("‚úÖ backend.validators.secure_input_validator")
        tests_passed += 1
    except ImportError as e:
        print(f"‚ùå backend.validators.secure_input_validator: {e}")
    
    return tests_passed, total_tests

def test_security_fixes():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...")
    print("=" * 50)
    
    total_passed = 0
    total_tests = 0
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
    passed, tests = _test_file_existence()
    total_passed += passed
    total_tests += tests
    
    passed, tests = _test_import_functionality()
    total_passed += passed
    total_tests += tests
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f"\nüìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {total_passed}/{total_tests}")
    print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {total_passed/total_tests*100:.1f}%")
    
    if total_passed == total_tests:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        return True
    else:
        print("‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
        return False

if __name__ == "__main__":
    test_security_fixes()