#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü, RLS –ø–æ–ª–∏—Ç–∏–∫, –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import os
from supabase import create_client, Client
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

SUPABASE_URL = os.getenv("SUPABASE_URL", "https://your-project.supabase.co")
SUPABASE_ANON_KEY = os.getenv("SUPABASE_ANON_KEY", "your-anon-key-here")

def setup_supabase():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        supabase: Client = create_client(SUPABASE_URL, SUPABASE_ANON_KEY)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...")
        response = supabase.table("profiles").select("id").limit(1).execute()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ!")
        
        # –ß–∏—Ç–∞–µ–º SQL —Å—Ö–µ–º—É
        schema_path = Path("database/schema.sql")
        if schema_path.exists():
            print("üìÑ –ß–∏—Ç–∞–µ–º SQL —Å—Ö–µ–º—É...")
            with open(schema_path, 'r', encoding='utf-8') as f:
                schema_sql = f.read()
            
            print("‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: SQL —Å—Ö–µ–º—É –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard")
            print("üìã –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤: https://supabase.com/dashboard/project/auhzhdndqyflfdfszapm/sql")
            print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ database/schema.sql")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ö–µ–º—É –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
            with open("supabase_setup.sql", 'w', encoding='utf-8') as f:
                f.write(schema_sql)
            
            print("‚úÖ SQL —Å—Ö–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ supabase_setup.sql")
        else:
            print("‚ùå –§–∞–π–ª database/schema.sql –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
        
        tables_to_check = [
            "profiles",
            "user_settings", 
            "user_api_keys",
            "projects",
            "ai_providers",
            "ai_models",
            "api_usage_log",
            "subscription_limits"
        ]
        
        existing_tables = []
        missing_tables = []
        
        for table in tables_to_check:
            try:
                supabase.table(table).select("id").limit(1).execute()
                existing_tables.append(table)
                print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ {table} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            except Exception as e:
                missing_tables.append(table)
                print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ {table} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {e}")
        
        if missing_tables:
            print(f"\n‚ö†Ô∏è  –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã: {', '.join(missing_tables)}")
            print("üìã –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å—Ö–µ–º—É –≤ Supabase Dashboard")
            return False
        
        print(f"\n‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã! ({len(existing_tables)}/{len(tables_to_check)})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
        providers = supabase.table("ai_providers").select("*").execute()
        if providers.data:
            print(f"‚úÖ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã: {len(providers.data)} –∑–∞–ø–∏—Å–µ–π")
        else:
            print("‚ö†Ô∏è  AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏
        models = supabase.table("ai_models").select("*").execute()
        if models.data:
            print(f"‚úÖ AI –º–æ–¥–µ–ª–∏: {len(models.data)} –∑–∞–ø–∏—Å–µ–π")
        else:
            print("‚ö†Ô∏è  AI –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –ø–æ–¥–ø–∏—Å–æ–∫
        limits = supabase.table("subscription_limits").select("*").execute()
        if limits.data:
            print(f"‚úÖ –õ–∏–º–∏—Ç—ã –ø–æ–¥–ø–∏—Å–æ–∫: {len(limits.data)} –∑–∞–ø–∏—Å–µ–π")
        else:
            print("‚ö†Ô∏è  –õ–∏–º–∏—Ç—ã –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ü–æ–ª—É—á–∏—Ç–µ Service Role Key –≤ Supabase Dashboard")
        print("2. –û–±–Ω–æ–≤–∏—Ç–µ SUPABASE_SERVICE_ROLE_KEY –≤ .env —Ñ–∞–π–ª–µ")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python run_server.py")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase: {e}")
        return False

def get_service_role_key_instructions():
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é Service Role Key"""
    
    print("\nüìã –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å Service Role Key:")
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Supabase Dashboard: https://supabase.com/dashboard")
    print("2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç: auhzhdndqyflfdfszapm")
    print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Settings ‚Üí API")
    print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ 'service_role' –∫–ª—é—á")
    print("5. –û–±–Ω–æ–≤–∏—Ç–µ SUPABASE_SERVICE_ROLE_KEY –≤ .env —Ñ–∞–π–ª–µ")
    print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û: Service Role Key –∏–º–µ–µ—Ç –ø–æ–ª–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞!")
    print("   –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∫–æ–º–º–∏—Ç—å—Ç–µ –µ–≥–æ –≤ git!")

if __name__ == "__main__":
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –°–∞–º–æ–∫–æ–¥–µ—Ä")
    print("=" * 50)
    
    success = setup_supabase()
    
    if success:
        get_service_role_key_instructions()
        print("\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏")
        print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å—Ö–µ–º—É")