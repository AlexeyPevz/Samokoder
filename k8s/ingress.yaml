apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: samokoder-ingress
  namespace: samokoder
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    nginx.ingress.kubernetes.io/rate-limit-requests: "100"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    nginx.ingress.kubernetes.io/rate-limit-requests: "100"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "DENY" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'" always;
spec:
  tls:
  - hosts:
    - samokoder.com
    - app.samokoder.com
    - api.samokoder.com
    secretName: samokoder-tls
  rules:
  - host: samokoder.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: samokoder-backend-service
            port:
              number: 8000
  - host: app.samokoder.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: samokoder-backend-service
            port:
              number: 8000
  - host: api.samokoder.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: samokoder-backend-service
            port:
              number: 8000