#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Samokoder –≤ Yandex Cloud
#
# –ü–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º:
# 1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Yandex Cloud CLI (yc).
# 2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –ø—É—à –≤ Yandex Container Registry.
# 3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env.prod —Å production-–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏.

set -e # –ü—Ä–µ—Ä—ã–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# --- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏) ---
YC_REGISTRY_ID="cr.p..."
YC_DOCKER_REGISTRY="cr.yandex/${YC_REGISTRY_ID}"
APP_VERSION="latest"

# –ò–º–µ–Ω–∞ –æ–±—Ä–∞–∑–æ–≤
API_IMAGE_NAME="samokoder-api"
WORKER_IMAGE_NAME="samokoder-worker"
FRONTEND_IMAGE_NAME="samokoder-frontend"

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
# –ü—Ä–∏–º–µ—Ä: "user@123.45.67.89"
REMOTE_SERVER=""

# --- –§—É–Ω–∫—Ü–∏–∏ ---

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
  echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if [ -z "${YC_REGISTRY_ID}" ] || [ -z "${REMOTE_SERVER}" ]; then
  log "‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ YC_REGISTRY_ID –∏ REMOTE_SERVER –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."
  exit 1
fi

# --- –®–∞–≥ 1: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Yandex Container Registry ---
log "üîë –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Yandex Container Registry..."
yc container registry configure-docker
log "‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ."

# --- –®–∞–≥ 2: –°–±–æ—Ä–∫–∞ –∏ Push Docker-–æ–±—Ä–∞–∑–æ–≤ ---
log "üî® –°–±–æ—Ä–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ Docker-–æ–±—Ä–∞–∑–æ–≤..."

# API
log "–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ ${API_IMAGE_NAME}..."
docker build -t "${YC_DOCKER_REGISTRY}/${API_IMAGE_NAME}:${APP_VERSION}" -f Dockerfile .
log "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–∞ ${API_IMAGE_NAME}..."
docker push "${YC_DOCKER_REGISTRY}/${API_IMAGE_NAME}:${APP_VERSION}"

# Worker
log "–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ ${WORKER_IMAGE_NAME}..."
docker build -t "${YC_DOCKER_REGISTRY}/${WORKER_IMAGE_NAME}:${APP_VERSION}" -f Dockerfile . # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ Dockerfile
log "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–∞ ${WORKER_IMAGE_NAME}..."
docker push "${YC_DOCKER_REGISTRY}/${WORKER_IMAGE_NAME}:${APP_VERSION}"

# Frontend
log "–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ ${FRONTEND_IMAGE_NAME}..."
docker build -t "${YC_DOCKER_REGISTRY}/${FRONTEND_IMAGE_NAME}:${APP_VERSION}" -f frontend/Dockerfile ./frontend
log "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–∞ ${FRONTEND_IMAGE_NAME}..."
docker push "${YC_DOCKER_REGISTRY}/${FRONTEND_IMAGE_NAME}:${APP_VERSION}"

log "‚úÖ –í—Å–µ –æ–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Yandex Container Registry."

# --- –®–∞–≥ 3: –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ ---
log "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${REMOTE_SERVER}..."

SSH_COMMANDS=""
SSH_COMMANDS+="cd ~/samokoder && " # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
SSH_COMMANDS+="export YC_DOCKER_REGISTRY=${YC_DOCKER_REGISTRY} && "
SSH_COMMANDS+="export API_IMAGE_NAME=${API_IMAGE_NAME} && "
SSH_COMMANDS+="export WORKER_IMAGE_NAME=${WORKER_IMAGE_NAME} && "
SSH_COMMANDS+="export FRONTEND_IMAGE_NAME=${FRONTEND_IMAGE_NAME} && "
SSH_COMMANDS+="export APP_VERSION=${APP_VERSION} && "
SSH_COMMANDS+="docker-compose pull && " # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏ –æ–±—Ä–∞–∑–æ–≤
SSH_COMMANDS+="docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d --remove-orphans" # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã

ssh -T ${REMOTE_SERVER} <<EOF
  ${SSH_COMMANDS}
EOF

log "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
