#!/usr/bin/env python3
"""
–†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase —á–µ—Ä–µ–∑ REST API
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

SUPABASE_URL = os.getenv("SUPABASE_URL", "https://your-project.supabase.co")
SERVICE_KEY = os.getenv("SUPABASE_SERVICE_ROLE_KEY", "your-service-role-key-here")

def test_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...")
    
    headers = {
        "apikey": SERVICE_KEY,
        "Authorization": f"Bearer {SERVICE_KEY}",
        "Content-Type": "application/json"
    }
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
        response = requests.get(f"{SUPABASE_URL}/rest/v1/", headers=headers)
        
        if response.status_code == 200:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def check_tables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã...")
    
    headers = {
        "apikey": SERVICE_KEY,
        "Authorization": f"Bearer {SERVICE_KEY}",
        "Content-Type": "application/json"
    }
    
    tables_to_check = [
        "profiles",
        "user_settings", 
        "user_api_keys",
        "projects",
        "ai_providers",
        "ai_models",
        "api_usage_log",
        "subscription_limits"
    ]
    
    existing_tables = []
    missing_tables = []
    
    for table in tables_to_check:
        try:
            response = requests.get(f"{SUPABASE_URL}/rest/v1/{table}?select=id&limit=1", headers=headers)
            
            if response.status_code == 200:
                existing_tables.append(table)
                print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ {table} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                missing_tables.append(table)
                print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ {table} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–∫–æ–¥: {response.status_code})")
                
        except Exception as e:
            missing_tables.append(table)
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ã {table}: {e}")
    
    return existing_tables, missing_tables

def get_sql_instructions():
    """–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é SQL"""
    print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï SUPABASE:")
    print("=" * 60)
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Supabase Dashboard:")
    print("   https://supabase.com/dashboard/project/auhzhdndqyflfdfszapm/sql")
    print("\n2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞:")
    print("   /workspace/supabase_quick_setup.sql")
    print("\n3. –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
    print("   python3 setup_supabase_manual.py --check")
    print("\n4. –ü–æ–ª—É—á–∏—Ç–µ Service Role Key:")
    print("   Settings ‚Üí API ‚Üí service_role")
    print("\n5. –û–±–Ω–æ–≤–∏—Ç–µ .env —Ñ–∞–π–ª:")
    print("   SUPABASE_SERVICE_ROLE_KEY=–≤–∞—à_–∫–ª—é—á")

def main():
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ –°–∞–º–æ–∫–æ–¥–µ—Ä")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if not test_connection():
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Supabase")
        print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –∫–ª—é—á–∏")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    existing_tables, missing_tables = check_tables()
    
    if missing_tables:
        print(f"\n‚ö†Ô∏è  –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã: {', '.join(missing_tables)}")
        get_sql_instructions()
    else:
        print(f"\n‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã! ({len(existing_tables)}/{len(existing_tables)})")
        print("üéâ Supabase –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    main()